{
  "{\"sourceRoot\":\"/home/tom/Code/st/actions-github-packages-monorepo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"filename\":\"/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tom/Code/st/actions-github-packages-monorepo",
      "filename": "/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tom/Code/st/actions-github-packages-monorepo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/test/",
        "sourceFileName": "validation.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _Schema = require(\"./../src/Schema\");\n\nconsole.log(\"validateSchema\", _Schema.validateSchema);\ndescribe(\"Config schema validation\", function () {\n  it(\"Validate default schema\", function () {\n    _Schema.validateSchema.validate(_Schema.defaultSchema);\n\n    (0, _chai.expect)(_Schema.validateSchema.validate(_Schema.defaultSchema).error).to.be.undefined;\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb24uc3BlYy5qcyJdLCJuYW1lcyI6WyJjb25zb2xlIiwibG9nIiwidmFsaWRhdGVTY2hlbWEiLCJkZXNjcmliZSIsIml0IiwidmFsaWRhdGUiLCJkZWZhdWx0U2NoZW1hIiwiZXJyb3IiLCJ0byIsImJlIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUVBQSxPQUFPLENBQUNDLEdBQVIsbUJBQThCQyxzQkFBOUI7QUFFQUMsUUFBUSw2QkFBNkIsWUFBTTtBQUN6Q0MsRUFBQUEsRUFBRSw0QkFBNEIsWUFBTTtBQUNsQ0YsMkJBQWVHLFFBQWYsQ0FBd0JDLHFCQUF4Qjs7QUFDQSxzQkFBT0osdUJBQWVHLFFBQWYsQ0FBd0JDLHFCQUF4QixFQUF1Q0MsS0FBOUMsRUFBcURDLEVBQXJELENBQXdEQyxFQUF4RCxDQUEyREMsU0FBM0Q7QUFDRCxHQUhDLENBQUY7QUFJRCxDQUxPLENBQVIiLCJzb3VyY2VSb290IjoiL2hvbWUvdG9tL0NvZGUvc3QvYWN0aW9ucy1naXRodWItcGFja2FnZXMtbW9ub3JlcG8vdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleHBlY3QgfSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgZGVmYXVsdFNjaGVtYSwgdmFsaWRhdGVTY2hlbWEgfSBmcm9tIFwiLi8uLi9zcmMvU2NoZW1hXCI7XG5cbmNvbnNvbGUubG9nKGB2YWxpZGF0ZVNjaGVtYWAsIHZhbGlkYXRlU2NoZW1hKTtcblxuZGVzY3JpYmUoYENvbmZpZyBzY2hlbWEgdmFsaWRhdGlvbmAsICgpID0+IHtcbiAgaXQoYFZhbGlkYXRlIGRlZmF1bHQgc2NoZW1hYCwgKCkgPT4ge1xuICAgIHZhbGlkYXRlU2NoZW1hLnZhbGlkYXRlKGRlZmF1bHRTY2hlbWEpO1xuICAgIGV4cGVjdCh2YWxpZGF0ZVNjaGVtYS52YWxpZGF0ZShkZWZhdWx0U2NoZW1hKS5lcnJvcikudG8uYmUudW5kZWZpbmVkO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "validation.spec.js"
      ],
      "names": [
        "console",
        "log",
        "validateSchema",
        "describe",
        "it",
        "validate",
        "defaultSchema",
        "error",
        "to",
        "be",
        "undefined"
      ],
      "mappings": ";;AAAA;;AACA;;AAEAA,OAAO,CAACC,GAAR,mBAA8BC,sBAA9B;AAEAC,QAAQ,6BAA6B,YAAM;AACzCC,EAAAA,EAAE,4BAA4B,YAAM;AAClCF,2BAAeG,QAAf,CAAwBC,qBAAxB;;AACA,sBAAOJ,uBAAeG,QAAf,CAAwBC,qBAAxB,EAAuCC,KAA9C,EAAqDC,EAArD,CAAwDC,EAAxD,CAA2DC,SAA3D;AACD,GAHC,CAAF;AAID,CALO,CAAR",
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/test/",
      "sourcesContent": [
        "import { expect } from \"chai\";\nimport { defaultSchema, validateSchema } from \"./../src/Schema\";\n\nconsole.log(`validateSchema`, validateSchema);\n\ndescribe(`Config schema validation`, () => {\n  it(`Validate default schema`, () => {\n    validateSchema.validate(defaultSchema);\n    expect(validateSchema.validate(defaultSchema).error).to.be.undefined;\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595064767670
  },
  "{\"sourceRoot\":\"/home/tom/Code/st/actions-github-packages-monorepo/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"filename\":\"/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tom/Code/st/actions-github-packages-monorepo",
      "filename": "/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tom/Code/st/actions-github-packages-monorepo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/",
        "sourceFileName": "Schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * The default config schema.\n *\n * @const\n * @type {Object.<string>}\n */\nvar defaultSchema = {\n  /**\n   * Paths to directories which ONLY constains package directories.\n   *\n   * @type {array}\n   */\n  packages: [\"/\"],\n\n  /**\n   * Default commands to run on each package.\n   *\n   * @type {Object.<string>}\n   */\n  commands: {\n    setUp: [],\n    install: [\"npm install\"],\n    test: [\"npm run test\"],\n    build: [\"npm run build\"],\n    afterBuild: [],\n    publish: [\"npm publish\"],\n    tryPublish: [\"npm publish --dry-run\"]\n  },\n\n  /**\n   * Overwrite commands per package.\n   *\n   * @type {Object.<string>}\n   */\n  packageCommands: {}\n};\n/**\n * The command validation schema.\n *\n * @const\n * @type {Object.<string>}\n */\n\nvar validateCommandsSchema = _joi[\"default\"].object({\n  setUp: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  install: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  test: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  build: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  afterBuild: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  publish: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  tryPublish: _joi[\"default\"].array().items(_joi[\"default\"].string())\n});\n/**\n * The validation schema\n * Usage: validateSchema.validate({});\n *\n * @const\n * @type {Object.<string>}\n */\n\n\nvar validateSchema = _joi[\"default\"].object({\n  packages: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  commands: validateCommandsSchema,\n  packageCommands: _joi[\"default\"].object().pattern(/^/, validateCommandsSchema)\n});\n\nvar _default = {\n  defaultSchema: defaultSchema,\n  validateCommandsSchema: validateCommandsSchema,\n  validateSchema: validateSchema\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjaGVtYS5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0U2NoZW1hIiwicGFja2FnZXMiLCJjb21tYW5kcyIsInNldFVwIiwiaW5zdGFsbCIsInRlc3QiLCJidWlsZCIsImFmdGVyQnVpbGQiLCJwdWJsaXNoIiwidHJ5UHVibGlzaCIsInBhY2thZ2VDb21tYW5kcyIsInZhbGlkYXRlQ29tbWFuZHNTY2hlbWEiLCJKb2kiLCJvYmplY3QiLCJhcnJheSIsIml0ZW1zIiwic3RyaW5nIiwidmFsaWRhdGVTY2hlbWEiLCJwYXR0ZXJuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQTs7Ozs7O0FBTUEsSUFBTUEsYUFBYSxHQUFHO0FBQ3BCOzs7OztBQUtBQyxFQUFBQSxRQUFRLEVBQUUsS0FOVTs7QUFRcEI7Ozs7O0FBS0FDLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxLQUFLLEVBQUUsRUFEQztBQUVSQyxJQUFBQSxPQUFPLEVBQUUsZUFGRDtBQUdSQyxJQUFBQSxJQUFJLEVBQUUsZ0JBSEU7QUFJUkMsSUFBQUEsS0FBSyxFQUFFLGlCQUpDO0FBS1JDLElBQUFBLFVBQVUsRUFBRSxFQUxKO0FBTVJDLElBQUFBLE9BQU8sRUFBRSxlQU5EO0FBT1JDLElBQUFBLFVBQVUsRUFBRTtBQVBKLEdBYlU7O0FBdUJwQjs7Ozs7QUFLQUMsRUFBQUEsZUFBZSxFQUFFO0FBNUJHLENBQXRCO0FBK0JBOzs7Ozs7O0FBTUEsSUFBTUMsc0JBQXNCLEdBQUdDLGdCQUFJQyxNQUFKLENBQVc7QUFDeENWLEVBQUFBLEtBQUssRUFBRVMsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FEaUM7QUFFeENaLEVBQUFBLE9BQU8sRUFBRVEsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FGK0I7QUFHeENYLEVBQUFBLElBQUksRUFBRU8sZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FIa0M7QUFJeENWLEVBQUFBLEtBQUssRUFBRU0sZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FKaUM7QUFLeENULEVBQUFBLFVBQVUsRUFBRUssZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FMNEI7QUFNeENSLEVBQUFBLE9BQU8sRUFBRUksZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FOK0I7QUFPeENQLEVBQUFBLFVBQVUsRUFBRUcsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEI7QUFQNEIsQ0FBWCxDQUEvQjtBQVVBOzs7Ozs7Ozs7QUFPQSxJQUFNQyxjQUFjLEdBQUdMLGdCQUFJQyxNQUFKLENBQVc7QUFDaENaLEVBQUFBLFFBQVEsRUFBRVcsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FEc0I7QUFFaENkLEVBQUFBLFFBQVEsRUFBRVMsc0JBRnNCO0FBR2hDRCxFQUFBQSxlQUFlLEVBQUVFLGdCQUFJQyxNQUFKLEdBQWFLLE9BQWIsQ0FBcUIsR0FBckIsRUFBMEJQLHNCQUExQjtBQUhlLENBQVgsQ0FBdkI7O2VBTWU7QUFBRVgsRUFBQUEsYUFBYSxFQUFiQSxhQUFGO0FBQWlCVyxFQUFBQSxzQkFBc0IsRUFBdEJBLHNCQUFqQjtBQUF5Q00sRUFBQUEsY0FBYyxFQUFkQTtBQUF6QyxDIiwic291cmNlUm9vdCI6Ii9ob21lL3RvbS9Db2RlL3N0L2FjdGlvbnMtZ2l0aHViLXBhY2thZ2VzLW1vbm9yZXBvL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSm9pIGZyb20gXCJqb2lcIjtcblxuLyoqXG4gKiBUaGUgZGVmYXVsdCBjb25maWcgc2NoZW1hLlxuICpcbiAqIEBjb25zdFxuICogQHR5cGUge09iamVjdC48c3RyaW5nPn1cbiAqL1xuY29uc3QgZGVmYXVsdFNjaGVtYSA9IHtcbiAgLyoqXG4gICAqIFBhdGhzIHRvIGRpcmVjdG9yaWVzIHdoaWNoIE9OTFkgY29uc3RhaW5zIHBhY2thZ2UgZGlyZWN0b3JpZXMuXG4gICAqXG4gICAqIEB0eXBlIHthcnJheX1cbiAgICovXG4gIHBhY2thZ2VzOiBbYC9gXSxcblxuICAvKipcbiAgICogRGVmYXVsdCBjb21tYW5kcyB0byBydW4gb24gZWFjaCBwYWNrYWdlLlxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0LjxzdHJpbmc+fVxuICAgKi9cbiAgY29tbWFuZHM6IHtcbiAgICBzZXRVcDogW10sXG4gICAgaW5zdGFsbDogW2BucG0gaW5zdGFsbGBdLFxuICAgIHRlc3Q6IFtgbnBtIHJ1biB0ZXN0YF0sXG4gICAgYnVpbGQ6IFtgbnBtIHJ1biBidWlsZGBdLFxuICAgIGFmdGVyQnVpbGQ6IFtdLFxuICAgIHB1Ymxpc2g6IFtgbnBtIHB1Ymxpc2hgXSxcbiAgICB0cnlQdWJsaXNoOiBbYG5wbSBwdWJsaXNoIC0tZHJ5LXJ1bmBdLFxuICB9LFxuXG4gIC8qKlxuICAgKiBPdmVyd3JpdGUgY29tbWFuZHMgcGVyIHBhY2thZ2UuXG4gICAqXG4gICAqIEB0eXBlIHtPYmplY3QuPHN0cmluZz59XG4gICAqL1xuICBwYWNrYWdlQ29tbWFuZHM6IHt9LFxufTtcblxuLyoqXG4gKiBUaGUgY29tbWFuZCB2YWxpZGF0aW9uIHNjaGVtYS5cbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtPYmplY3QuPHN0cmluZz59XG4gKi9cbmNvbnN0IHZhbGlkYXRlQ29tbWFuZHNTY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgc2V0VXA6IEpvaS5hcnJheSgpLml0ZW1zKEpvaS5zdHJpbmcoKSksXG4gIGluc3RhbGw6IEpvaS5hcnJheSgpLml0ZW1zKEpvaS5zdHJpbmcoKSksXG4gIHRlc3Q6IEpvaS5hcnJheSgpLml0ZW1zKEpvaS5zdHJpbmcoKSksXG4gIGJ1aWxkOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICBhZnRlckJ1aWxkOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICBwdWJsaXNoOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICB0cnlQdWJsaXNoOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxufSk7XG5cbi8qKlxuICogVGhlIHZhbGlkYXRpb24gc2NoZW1hXG4gKiBVc2FnZTogdmFsaWRhdGVTY2hlbWEudmFsaWRhdGUoe30pO1xuICpcbiAqIEBjb25zdFxuICogQHR5cGUge09iamVjdC48c3RyaW5nPn1cbiAqL1xuY29uc3QgdmFsaWRhdGVTY2hlbWEgPSBKb2kub2JqZWN0KHtcbiAgcGFja2FnZXM6IEpvaS5hcnJheSgpLml0ZW1zKEpvaS5zdHJpbmcoKSksXG4gIGNvbW1hbmRzOiB2YWxpZGF0ZUNvbW1hbmRzU2NoZW1hLFxuICBwYWNrYWdlQ29tbWFuZHM6IEpvaS5vYmplY3QoKS5wYXR0ZXJuKC9eLywgdmFsaWRhdGVDb21tYW5kc1NjaGVtYSksXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgeyBkZWZhdWx0U2NoZW1hLCB2YWxpZGF0ZUNvbW1hbmRzU2NoZW1hLCB2YWxpZGF0ZVNjaGVtYSB9O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Schema.js"
      ],
      "names": [
        "defaultSchema",
        "packages",
        "commands",
        "setUp",
        "install",
        "test",
        "build",
        "afterBuild",
        "publish",
        "tryPublish",
        "packageCommands",
        "validateCommandsSchema",
        "Joi",
        "object",
        "array",
        "items",
        "string",
        "validateSchema",
        "pattern"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;AAMA,IAAMA,aAAa,GAAG;AACpB;;;;;AAKAC,EAAAA,QAAQ,EAAE,KANU;;AAQpB;;;;;AAKAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,OAAO,EAAE,eAFD;AAGRC,IAAAA,IAAI,EAAE,gBAHE;AAIRC,IAAAA,KAAK,EAAE,iBAJC;AAKRC,IAAAA,UAAU,EAAE,EALJ;AAMRC,IAAAA,OAAO,EAAE,eAND;AAORC,IAAAA,UAAU,EAAE;AAPJ,GAbU;;AAuBpB;;;;;AAKAC,EAAAA,eAAe,EAAE;AA5BG,CAAtB;AA+BA;;;;;;;AAMA,IAAMC,sBAAsB,GAAGC,gBAAIC,MAAJ,CAAW;AACxCV,EAAAA,KAAK,EAAES,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CADiC;AAExCZ,EAAAA,OAAO,EAAEQ,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAF+B;AAGxCX,EAAAA,IAAI,EAAEO,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAHkC;AAIxCV,EAAAA,KAAK,EAAEM,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAJiC;AAKxCT,EAAAA,UAAU,EAAEK,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAL4B;AAMxCR,EAAAA,OAAO,EAAEI,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAN+B;AAOxCP,EAAAA,UAAU,EAAEG,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB;AAP4B,CAAX,CAA/B;AAUA;;;;;;;;;AAOA,IAAMC,cAAc,GAAGL,gBAAIC,MAAJ,CAAW;AAChCZ,EAAAA,QAAQ,EAAEW,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CADsB;AAEhCd,EAAAA,QAAQ,EAAES,sBAFsB;AAGhCD,EAAAA,eAAe,EAAEE,gBAAIC,MAAJ,GAAaK,OAAb,CAAqB,GAArB,EAA0BP,sBAA1B;AAHe,CAAX,CAAvB;;eAMe;AAAEX,EAAAA,aAAa,EAAbA,aAAF;AAAiBW,EAAAA,sBAAsB,EAAtBA,sBAAjB;AAAyCM,EAAAA,cAAc,EAAdA;AAAzC,C",
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/",
      "sourcesContent": [
        "import Joi from \"joi\";\n\n/**\n * The default config schema.\n *\n * @const\n * @type {Object.<string>}\n */\nconst defaultSchema = {\n  /**\n   * Paths to directories which ONLY constains package directories.\n   *\n   * @type {array}\n   */\n  packages: [`/`],\n\n  /**\n   * Default commands to run on each package.\n   *\n   * @type {Object.<string>}\n   */\n  commands: {\n    setUp: [],\n    install: [`npm install`],\n    test: [`npm run test`],\n    build: [`npm run build`],\n    afterBuild: [],\n    publish: [`npm publish`],\n    tryPublish: [`npm publish --dry-run`],\n  },\n\n  /**\n   * Overwrite commands per package.\n   *\n   * @type {Object.<string>}\n   */\n  packageCommands: {},\n};\n\n/**\n * The command validation schema.\n *\n * @const\n * @type {Object.<string>}\n */\nconst validateCommandsSchema = Joi.object({\n  setUp: Joi.array().items(Joi.string()),\n  install: Joi.array().items(Joi.string()),\n  test: Joi.array().items(Joi.string()),\n  build: Joi.array().items(Joi.string()),\n  afterBuild: Joi.array().items(Joi.string()),\n  publish: Joi.array().items(Joi.string()),\n  tryPublish: Joi.array().items(Joi.string()),\n});\n\n/**\n * The validation schema\n * Usage: validateSchema.validate({});\n *\n * @const\n * @type {Object.<string>}\n */\nconst validateSchema = Joi.object({\n  packages: Joi.array().items(Joi.string()),\n  commands: validateCommandsSchema,\n  packageCommands: Joi.object().pattern(/^/, validateCommandsSchema),\n});\n\nexport default { defaultSchema, validateCommandsSchema, validateSchema };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595063046530
  },
  "{\"sourceRoot\":\"/home/tom/Code/st/actions-github-packages-monorepo/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"filename\":\"/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"plugins\":[{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tom/Code/st/actions-github-packages-monorepo",
      "filename": "/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tom/Code/st/actions-github-packages-monorepo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js",
        "plugins": [
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tom/Code/st/actions-github-packages-monorepo/test/validation.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/test/",
        "sourceFileName": "validation.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _Schema = require(\"../src/Schema\");\n\ndescribe(\"Config schema validation\", function () {\n  it(\"Validate default schema\", function () {\n    var validatedSchema = _Schema.validateSchema.validate(_Schema.defaultSchema);\n\n    (0, _chai.expect)(validatedSchema).to.deep.equal({\n      value: _Schema.defaultSchema\n    });\n    (0, _chai.expect)(validatedSchema).to.not.have.property(\"error\");\n  });\n  it(\"Validate valid schema\", function () {\n    var validSchema = {\n      packages: [\"/\"],\n      commands: {\n        setUp: [],\n        install: [\"npm install\"],\n        test: [\"npm run test\"],\n        build: [\"npm run build\"],\n        afterBuild: [],\n        publish: [\"npm publish\"],\n        tryPublish: [\"npm publish --dry-run\"]\n      },\n      packageCommands: {\n        mooi: {\n          setUp: [],\n          install: [\"npm install\"],\n          test: [\"npm run test\"],\n          build: [\"npm run build\"],\n          afterBuild: [],\n          publish: [\"npm publish\"],\n          tryPublish: [\"npm publish --dry-run\"]\n        }\n      }\n    };\n\n    var validatedSchema = _Schema.validateSchema.validate(validSchema);\n\n    (0, _chai.expect)(validatedSchema).to.deep.equal({\n      value: validSchema\n    });\n    (0, _chai.expect)(validatedSchema).to.not.have.property(\"error\");\n  });\n  it(\"Invalidate invalid schema\", function () {\n    var invalidSchema = {\n      packages: [\"/\"],\n      commands: {\n        setUp: [],\n        install: [\"npm install\"],\n        test: [\"npm run test\"],\n        build: [\"npm run build\"],\n        afterBuild: [],\n        publish: [\"npm publish\"],\n        tryPublish: [\"npm publish --dry-run\"],\n        hello: [\"world\"]\n      },\n      packageCommands: {}\n    };\n\n    var validatedSchema = _Schema.validateSchema.validate(invalidSchema);\n\n    (0, _chai.expect)(validatedSchema).to.have.property(\"error\");\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb24uc3BlYy5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwidmFsaWRhdGVkU2NoZW1hIiwidmFsaWRhdGVTY2hlbWEiLCJ2YWxpZGF0ZSIsImRlZmF1bHRTY2hlbWEiLCJ0byIsImRlZXAiLCJlcXVhbCIsInZhbHVlIiwibm90IiwiaGF2ZSIsInByb3BlcnR5IiwidmFsaWRTY2hlbWEiLCJwYWNrYWdlcyIsImNvbW1hbmRzIiwic2V0VXAiLCJpbnN0YWxsIiwidGVzdCIsImJ1aWxkIiwiYWZ0ZXJCdWlsZCIsInB1Ymxpc2giLCJ0cnlQdWJsaXNoIiwicGFja2FnZUNvbW1hbmRzIiwibW9vaSIsImludmFsaWRTY2hlbWEiLCJoZWxsbyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFFQUEsUUFBUSw2QkFBNkIsWUFBTTtBQUN6Q0MsRUFBQUEsRUFBRSw0QkFBNEIsWUFBTTtBQUNsQyxRQUFNQyxlQUFlLEdBQUdDLHVCQUFlQyxRQUFmLENBQXdCQyxxQkFBeEIsQ0FBeEI7O0FBRUEsc0JBQU9ILGVBQVAsRUFBd0JJLEVBQXhCLENBQTJCQyxJQUEzQixDQUFnQ0MsS0FBaEMsQ0FBc0M7QUFBRUMsTUFBQUEsS0FBSyxFQUFFSjtBQUFULEtBQXRDO0FBQ0Esc0JBQU9ILGVBQVAsRUFBd0JJLEVBQXhCLENBQTJCSSxHQUEzQixDQUErQkMsSUFBL0IsQ0FBb0NDLFFBQXBDO0FBQ0QsR0FMQyxDQUFGO0FBT0FYLEVBQUFBLEVBQUUsMEJBQTBCLFlBQU07QUFDaEMsUUFBTVksV0FBVyxHQUFHO0FBQ2xCQyxNQUFBQSxRQUFRLEVBQUUsS0FEUTtBQUVsQkMsTUFBQUEsUUFBUSxFQUFFO0FBQ1JDLFFBQUFBLEtBQUssRUFBRSxFQURDO0FBRVJDLFFBQUFBLE9BQU8sRUFBRSxlQUZEO0FBR1JDLFFBQUFBLElBQUksRUFBRSxnQkFIRTtBQUlSQyxRQUFBQSxLQUFLLEVBQUUsaUJBSkM7QUFLUkMsUUFBQUEsVUFBVSxFQUFFLEVBTEo7QUFNUkMsUUFBQUEsT0FBTyxFQUFFLGVBTkQ7QUFPUkMsUUFBQUEsVUFBVSxFQUFFO0FBUEosT0FGUTtBQVdsQkMsTUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLFFBQUFBLElBQUksRUFBRTtBQUNKUixVQUFBQSxLQUFLLEVBQUUsRUFESDtBQUVKQyxVQUFBQSxPQUFPLEVBQUUsZUFGTDtBQUdKQyxVQUFBQSxJQUFJLEVBQUUsZ0JBSEY7QUFJSkMsVUFBQUEsS0FBSyxFQUFFLGlCQUpIO0FBS0pDLFVBQUFBLFVBQVUsRUFBRSxFQUxSO0FBTUpDLFVBQUFBLE9BQU8sRUFBRSxlQU5MO0FBT0pDLFVBQUFBLFVBQVUsRUFBRTtBQVBSO0FBRFM7QUFYQyxLQUFwQjs7QUF3QkEsUUFBTXBCLGVBQWUsR0FBR0MsdUJBQWVDLFFBQWYsQ0FBd0JTLFdBQXhCLENBQXhCOztBQUVBLHNCQUFPWCxlQUFQLEVBQXdCSSxFQUF4QixDQUEyQkMsSUFBM0IsQ0FBZ0NDLEtBQWhDLENBQXNDO0FBQUVDLE1BQUFBLEtBQUssRUFBRUk7QUFBVCxLQUF0QztBQUNBLHNCQUFPWCxlQUFQLEVBQXdCSSxFQUF4QixDQUEyQkksR0FBM0IsQ0FBK0JDLElBQS9CLENBQW9DQyxRQUFwQztBQUNELEdBN0JDLENBQUY7QUErQkFYLEVBQUFBLEVBQUUsOEJBQThCLFlBQU07QUFDcEMsUUFBTXdCLGFBQWEsR0FBRztBQUNwQlgsTUFBQUEsUUFBUSxFQUFFLEtBRFU7QUFFcEJDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxLQUFLLEVBQUUsRUFEQztBQUVSQyxRQUFBQSxPQUFPLEVBQUUsZUFGRDtBQUdSQyxRQUFBQSxJQUFJLEVBQUUsZ0JBSEU7QUFJUkMsUUFBQUEsS0FBSyxFQUFFLGlCQUpDO0FBS1JDLFFBQUFBLFVBQVUsRUFBRSxFQUxKO0FBTVJDLFFBQUFBLE9BQU8sRUFBRSxlQU5EO0FBT1JDLFFBQUFBLFVBQVUsRUFBRSx5QkFQSjtBQVFSSSxRQUFBQSxLQUFLLEVBQUU7QUFSQyxPQUZVO0FBWXBCSCxNQUFBQSxlQUFlLEVBQUU7QUFaRyxLQUF0Qjs7QUFlQSxRQUFNckIsZUFBZSxHQUFHQyx1QkFBZUMsUUFBZixDQUF3QnFCLGFBQXhCLENBQXhCOztBQUNBLHNCQUFPdkIsZUFBUCxFQUF3QkksRUFBeEIsQ0FBMkJLLElBQTNCLENBQWdDQyxRQUFoQztBQUNELEdBbEJDLENBQUY7QUFtQkQsQ0ExRE8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvaG9tZS90b20vQ29kZS9zdC9hY3Rpb25zLWdpdGh1Yi1wYWNrYWdlcy1tb25vcmVwby90ZXN0LyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4cGVjdCB9IGZyb20gXCJjaGFpXCI7XG5pbXBvcnQgeyBkZWZhdWx0U2NoZW1hLCB2YWxpZGF0ZVNjaGVtYSB9IGZyb20gXCIuLi9zcmMvU2NoZW1hXCI7XG5cbmRlc2NyaWJlKGBDb25maWcgc2NoZW1hIHZhbGlkYXRpb25gLCAoKSA9PiB7XG4gIGl0KGBWYWxpZGF0ZSBkZWZhdWx0IHNjaGVtYWAsICgpID0+IHtcbiAgICBjb25zdCB2YWxpZGF0ZWRTY2hlbWEgPSB2YWxpZGF0ZVNjaGVtYS52YWxpZGF0ZShkZWZhdWx0U2NoZW1hKTtcblxuICAgIGV4cGVjdCh2YWxpZGF0ZWRTY2hlbWEpLnRvLmRlZXAuZXF1YWwoeyB2YWx1ZTogZGVmYXVsdFNjaGVtYSB9KTtcbiAgICBleHBlY3QodmFsaWRhdGVkU2NoZW1hKS50by5ub3QuaGF2ZS5wcm9wZXJ0eShgZXJyb3JgKTtcbiAgfSk7XG5cbiAgaXQoYFZhbGlkYXRlIHZhbGlkIHNjaGVtYWAsICgpID0+IHtcbiAgICBjb25zdCB2YWxpZFNjaGVtYSA9IHtcbiAgICAgIHBhY2thZ2VzOiBbYC9gXSxcbiAgICAgIGNvbW1hbmRzOiB7XG4gICAgICAgIHNldFVwOiBbXSxcbiAgICAgICAgaW5zdGFsbDogW2BucG0gaW5zdGFsbGBdLFxuICAgICAgICB0ZXN0OiBbYG5wbSBydW4gdGVzdGBdLFxuICAgICAgICBidWlsZDogW2BucG0gcnVuIGJ1aWxkYF0sXG4gICAgICAgIGFmdGVyQnVpbGQ6IFtdLFxuICAgICAgICBwdWJsaXNoOiBbYG5wbSBwdWJsaXNoYF0sXG4gICAgICAgIHRyeVB1Ymxpc2g6IFtgbnBtIHB1Ymxpc2ggLS1kcnktcnVuYF0sXG4gICAgICB9LFxuICAgICAgcGFja2FnZUNvbW1hbmRzOiB7XG4gICAgICAgIG1vb2k6IHtcbiAgICAgICAgICBzZXRVcDogW10sXG4gICAgICAgICAgaW5zdGFsbDogW2BucG0gaW5zdGFsbGBdLFxuICAgICAgICAgIHRlc3Q6IFtgbnBtIHJ1biB0ZXN0YF0sXG4gICAgICAgICAgYnVpbGQ6IFtgbnBtIHJ1biBidWlsZGBdLFxuICAgICAgICAgIGFmdGVyQnVpbGQ6IFtdLFxuICAgICAgICAgIHB1Ymxpc2g6IFtgbnBtIHB1Ymxpc2hgXSxcbiAgICAgICAgICB0cnlQdWJsaXNoOiBbYG5wbSBwdWJsaXNoIC0tZHJ5LXJ1bmBdLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgY29uc3QgdmFsaWRhdGVkU2NoZW1hID0gdmFsaWRhdGVTY2hlbWEudmFsaWRhdGUodmFsaWRTY2hlbWEpO1xuXG4gICAgZXhwZWN0KHZhbGlkYXRlZFNjaGVtYSkudG8uZGVlcC5lcXVhbCh7IHZhbHVlOiB2YWxpZFNjaGVtYSB9KTtcbiAgICBleHBlY3QodmFsaWRhdGVkU2NoZW1hKS50by5ub3QuaGF2ZS5wcm9wZXJ0eShgZXJyb3JgKTtcbiAgfSk7XG5cbiAgaXQoYEludmFsaWRhdGUgaW52YWxpZCBzY2hlbWFgLCAoKSA9PiB7XG4gICAgY29uc3QgaW52YWxpZFNjaGVtYSA9IHtcbiAgICAgIHBhY2thZ2VzOiBbYC9gXSxcbiAgICAgIGNvbW1hbmRzOiB7XG4gICAgICAgIHNldFVwOiBbXSxcbiAgICAgICAgaW5zdGFsbDogW2BucG0gaW5zdGFsbGBdLFxuICAgICAgICB0ZXN0OiBbYG5wbSBydW4gdGVzdGBdLFxuICAgICAgICBidWlsZDogW2BucG0gcnVuIGJ1aWxkYF0sXG4gICAgICAgIGFmdGVyQnVpbGQ6IFtdLFxuICAgICAgICBwdWJsaXNoOiBbYG5wbSBwdWJsaXNoYF0sXG4gICAgICAgIHRyeVB1Ymxpc2g6IFtgbnBtIHB1Ymxpc2ggLS1kcnktcnVuYF0sXG4gICAgICAgIGhlbGxvOiBbYHdvcmxkYF0sXG4gICAgICB9LFxuICAgICAgcGFja2FnZUNvbW1hbmRzOiB7fSxcbiAgICB9O1xuXG4gICAgY29uc3QgdmFsaWRhdGVkU2NoZW1hID0gdmFsaWRhdGVTY2hlbWEudmFsaWRhdGUoaW52YWxpZFNjaGVtYSk7XG4gICAgZXhwZWN0KHZhbGlkYXRlZFNjaGVtYSkudG8uaGF2ZS5wcm9wZXJ0eShgZXJyb3JgKTtcbiAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "validation.spec.js"
      ],
      "names": [
        "describe",
        "it",
        "validatedSchema",
        "validateSchema",
        "validate",
        "defaultSchema",
        "to",
        "deep",
        "equal",
        "value",
        "not",
        "have",
        "property",
        "validSchema",
        "packages",
        "commands",
        "setUp",
        "install",
        "test",
        "build",
        "afterBuild",
        "publish",
        "tryPublish",
        "packageCommands",
        "mooi",
        "invalidSchema",
        "hello"
      ],
      "mappings": ";;AAAA;;AACA;;AAEAA,QAAQ,6BAA6B,YAAM;AACzCC,EAAAA,EAAE,4BAA4B,YAAM;AAClC,QAAMC,eAAe,GAAGC,uBAAeC,QAAf,CAAwBC,qBAAxB,CAAxB;;AAEA,sBAAOH,eAAP,EAAwBI,EAAxB,CAA2BC,IAA3B,CAAgCC,KAAhC,CAAsC;AAAEC,MAAAA,KAAK,EAAEJ;AAAT,KAAtC;AACA,sBAAOH,eAAP,EAAwBI,EAAxB,CAA2BI,GAA3B,CAA+BC,IAA/B,CAAoCC,QAApC;AACD,GALC,CAAF;AAOAX,EAAAA,EAAE,0BAA0B,YAAM;AAChC,QAAMY,WAAW,GAAG;AAClBC,MAAAA,QAAQ,EAAE,KADQ;AAElBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,EADC;AAERC,QAAAA,OAAO,EAAE,eAFD;AAGRC,QAAAA,IAAI,EAAE,gBAHE;AAIRC,QAAAA,KAAK,EAAE,iBAJC;AAKRC,QAAAA,UAAU,EAAE,EALJ;AAMRC,QAAAA,OAAO,EAAE,eAND;AAORC,QAAAA,UAAU,EAAE;AAPJ,OAFQ;AAWlBC,MAAAA,eAAe,EAAE;AACfC,QAAAA,IAAI,EAAE;AACJR,UAAAA,KAAK,EAAE,EADH;AAEJC,UAAAA,OAAO,EAAE,eAFL;AAGJC,UAAAA,IAAI,EAAE,gBAHF;AAIJC,UAAAA,KAAK,EAAE,iBAJH;AAKJC,UAAAA,UAAU,EAAE,EALR;AAMJC,UAAAA,OAAO,EAAE,eANL;AAOJC,UAAAA,UAAU,EAAE;AAPR;AADS;AAXC,KAApB;;AAwBA,QAAMpB,eAAe,GAAGC,uBAAeC,QAAf,CAAwBS,WAAxB,CAAxB;;AAEA,sBAAOX,eAAP,EAAwBI,EAAxB,CAA2BC,IAA3B,CAAgCC,KAAhC,CAAsC;AAAEC,MAAAA,KAAK,EAAEI;AAAT,KAAtC;AACA,sBAAOX,eAAP,EAAwBI,EAAxB,CAA2BI,GAA3B,CAA+BC,IAA/B,CAAoCC,QAApC;AACD,GA7BC,CAAF;AA+BAX,EAAAA,EAAE,8BAA8B,YAAM;AACpC,QAAMwB,aAAa,GAAG;AACpBX,MAAAA,QAAQ,EAAE,KADU;AAEpBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,EADC;AAERC,QAAAA,OAAO,EAAE,eAFD;AAGRC,QAAAA,IAAI,EAAE,gBAHE;AAIRC,QAAAA,KAAK,EAAE,iBAJC;AAKRC,QAAAA,UAAU,EAAE,EALJ;AAMRC,QAAAA,OAAO,EAAE,eAND;AAORC,QAAAA,UAAU,EAAE,yBAPJ;AAQRI,QAAAA,KAAK,EAAE;AARC,OAFU;AAYpBH,MAAAA,eAAe,EAAE;AAZG,KAAtB;;AAeA,QAAMrB,eAAe,GAAGC,uBAAeC,QAAf,CAAwBqB,aAAxB,CAAxB;;AACA,sBAAOvB,eAAP,EAAwBI,EAAxB,CAA2BK,IAA3B,CAAgCC,QAAhC;AACD,GAlBC,CAAF;AAmBD,CA1DO,CAAR",
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/test/",
      "sourcesContent": [
        "import { expect } from \"chai\";\nimport { defaultSchema, validateSchema } from \"../src/Schema\";\n\ndescribe(`Config schema validation`, () => {\n  it(`Validate default schema`, () => {\n    const validatedSchema = validateSchema.validate(defaultSchema);\n\n    expect(validatedSchema).to.deep.equal({ value: defaultSchema });\n    expect(validatedSchema).to.not.have.property(`error`);\n  });\n\n  it(`Validate valid schema`, () => {\n    const validSchema = {\n      packages: [`/`],\n      commands: {\n        setUp: [],\n        install: [`npm install`],\n        test: [`npm run test`],\n        build: [`npm run build`],\n        afterBuild: [],\n        publish: [`npm publish`],\n        tryPublish: [`npm publish --dry-run`],\n      },\n      packageCommands: {\n        mooi: {\n          setUp: [],\n          install: [`npm install`],\n          test: [`npm run test`],\n          build: [`npm run build`],\n          afterBuild: [],\n          publish: [`npm publish`],\n          tryPublish: [`npm publish --dry-run`],\n        },\n      },\n    };\n\n    const validatedSchema = validateSchema.validate(validSchema);\n\n    expect(validatedSchema).to.deep.equal({ value: validSchema });\n    expect(validatedSchema).to.not.have.property(`error`);\n  });\n\n  it(`Invalidate invalid schema`, () => {\n    const invalidSchema = {\n      packages: [`/`],\n      commands: {\n        setUp: [],\n        install: [`npm install`],\n        test: [`npm run test`],\n        build: [`npm run build`],\n        afterBuild: [],\n        publish: [`npm publish`],\n        tryPublish: [`npm publish --dry-run`],\n        hello: [`world`],\n      },\n      packageCommands: {},\n    };\n\n    const validatedSchema = validateSchema.validate(invalidSchema);\n    expect(validatedSchema).to.have.property(`error`);\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595069966160
  },
  "{\"sourceRoot\":\"/home/tom/Code/st/actions-github-packages-monorepo/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"filename\":\"/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"plugins\":[{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tom/Code/st/actions-github-packages-monorepo",
      "filename": "/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tom/Code/st/actions-github-packages-monorepo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js",
        "plugins": [
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tom/Code/st/actions-github-packages-monorepo/src/Schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/",
        "sourceFileName": "Schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.validateSchema = exports.validateCommandsSchema = exports.defaultSchema = void 0;\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * The default config schema.\n *\n * @const\n * @type {Object.<string>}\n */\nvar defaultSchema = {\n  /**\n   * Paths to directories which ONLY constains package directories.\n   *\n   * @type {array}\n   */\n  packages: [\"/\"],\n\n  /**\n   * Default commands to run on each package.\n   *\n   * @type {Object.<string>}\n   */\n  commands: {\n    setUp: [],\n    install: [\"npm install\"],\n    test: [\"npm run test\"],\n    build: [\"npm run build\"],\n    afterBuild: [],\n    publish: [\"npm publish\"],\n    tryPublish: [\"npm publish --dry-run\"]\n  },\n\n  /**\n   * Overwrite commands per package.\n   *\n   * @type {Object.<string>}\n   */\n  packageCommands: {}\n};\n/**\n * The command validation schema.\n *\n * @const\n * @type {Object.<string>}\n */\n\nexports.defaultSchema = defaultSchema;\n\nvar validateCommandsSchema = _joi[\"default\"].object({\n  setUp: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  install: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  test: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  build: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  afterBuild: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  publish: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  tryPublish: _joi[\"default\"].array().items(_joi[\"default\"].string())\n});\n/**\n * The validation schema\n * Usage: validateSchema.validate({});\n *\n * @const\n * @type {Object.<string>}\n */\n\n\nexports.validateCommandsSchema = validateCommandsSchema;\n\nvar validateSchema = _joi[\"default\"].object({\n  packages: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  commands: validateCommandsSchema,\n  packageCommands: _joi[\"default\"].object().pattern(/^/, validateCommandsSchema)\n});\n\nexports.validateSchema = validateSchema;\nvar _default = {\n  defaultSchema: defaultSchema,\n  validateCommandsSchema: validateCommandsSchema,\n  validateSchema: validateSchema\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjaGVtYS5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0U2NoZW1hIiwicGFja2FnZXMiLCJjb21tYW5kcyIsInNldFVwIiwiaW5zdGFsbCIsInRlc3QiLCJidWlsZCIsImFmdGVyQnVpbGQiLCJwdWJsaXNoIiwidHJ5UHVibGlzaCIsInBhY2thZ2VDb21tYW5kcyIsInZhbGlkYXRlQ29tbWFuZHNTY2hlbWEiLCJKb2kiLCJvYmplY3QiLCJhcnJheSIsIml0ZW1zIiwic3RyaW5nIiwidmFsaWRhdGVTY2hlbWEiLCJwYXR0ZXJuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQTs7Ozs7O0FBTU8sSUFBTUEsYUFBYSxHQUFHO0FBQzNCOzs7OztBQUtBQyxFQUFBQSxRQUFRLEVBQUUsS0FOaUI7O0FBUTNCOzs7OztBQUtBQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsS0FBSyxFQUFFLEVBREM7QUFFUkMsSUFBQUEsT0FBTyxFQUFFLGVBRkQ7QUFHUkMsSUFBQUEsSUFBSSxFQUFFLGdCQUhFO0FBSVJDLElBQUFBLEtBQUssRUFBRSxpQkFKQztBQUtSQyxJQUFBQSxVQUFVLEVBQUUsRUFMSjtBQU1SQyxJQUFBQSxPQUFPLEVBQUUsZUFORDtBQU9SQyxJQUFBQSxVQUFVLEVBQUU7QUFQSixHQWJpQjs7QUF1QjNCOzs7OztBQUtBQyxFQUFBQSxlQUFlLEVBQUU7QUE1QlUsQ0FBdEI7QUErQlA7Ozs7Ozs7OztBQU1PLElBQU1DLHNCQUFzQixHQUFHQyxnQkFBSUMsTUFBSixDQUFXO0FBQy9DVixFQUFBQSxLQUFLLEVBQUVTLGdCQUFJRSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JILGdCQUFJSSxNQUFKLEVBQWxCLENBRHdDO0FBRS9DWixFQUFBQSxPQUFPLEVBQUVRLGdCQUFJRSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JILGdCQUFJSSxNQUFKLEVBQWxCLENBRnNDO0FBRy9DWCxFQUFBQSxJQUFJLEVBQUVPLGdCQUFJRSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JILGdCQUFJSSxNQUFKLEVBQWxCLENBSHlDO0FBSS9DVixFQUFBQSxLQUFLLEVBQUVNLGdCQUFJRSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JILGdCQUFJSSxNQUFKLEVBQWxCLENBSndDO0FBSy9DVCxFQUFBQSxVQUFVLEVBQUVLLGdCQUFJRSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JILGdCQUFJSSxNQUFKLEVBQWxCLENBTG1DO0FBTS9DUixFQUFBQSxPQUFPLEVBQUVJLGdCQUFJRSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JILGdCQUFJSSxNQUFKLEVBQWxCLENBTnNDO0FBTy9DUCxFQUFBQSxVQUFVLEVBQUVHLGdCQUFJRSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JILGdCQUFJSSxNQUFKLEVBQWxCO0FBUG1DLENBQVgsQ0FBL0I7QUFVUDs7Ozs7Ozs7Ozs7QUFPTyxJQUFNQyxjQUFjLEdBQUdMLGdCQUFJQyxNQUFKLENBQVc7QUFDdkNaLEVBQUFBLFFBQVEsRUFBRVcsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FENkI7QUFFdkNkLEVBQUFBLFFBQVEsRUFBRVMsc0JBRjZCO0FBR3ZDRCxFQUFBQSxlQUFlLEVBQUVFLGdCQUFJQyxNQUFKLEdBQWFLLE9BQWIsQ0FBcUIsR0FBckIsRUFBMEJQLHNCQUExQjtBQUhzQixDQUFYLENBQXZCOzs7ZUFNUTtBQUFFWCxFQUFBQSxhQUFhLEVBQWJBLGFBQUY7QUFBaUJXLEVBQUFBLHNCQUFzQixFQUF0QkEsc0JBQWpCO0FBQXlDTSxFQUFBQSxjQUFjLEVBQWRBO0FBQXpDLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvdG9tL0NvZGUvc3QvYWN0aW9ucy1naXRodWItcGFja2FnZXMtbW9ub3JlcG8vc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKb2kgZnJvbSBcImpvaVwiO1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IGNvbmZpZyBzY2hlbWEuXG4gKlxuICogQGNvbnN0XG4gKiBAdHlwZSB7T2JqZWN0LjxzdHJpbmc+fVxuICovXG5leHBvcnQgY29uc3QgZGVmYXVsdFNjaGVtYSA9IHtcbiAgLyoqXG4gICAqIFBhdGhzIHRvIGRpcmVjdG9yaWVzIHdoaWNoIE9OTFkgY29uc3RhaW5zIHBhY2thZ2UgZGlyZWN0b3JpZXMuXG4gICAqXG4gICAqIEB0eXBlIHthcnJheX1cbiAgICovXG4gIHBhY2thZ2VzOiBbYC9gXSxcblxuICAvKipcbiAgICogRGVmYXVsdCBjb21tYW5kcyB0byBydW4gb24gZWFjaCBwYWNrYWdlLlxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0LjxzdHJpbmc+fVxuICAgKi9cbiAgY29tbWFuZHM6IHtcbiAgICBzZXRVcDogW10sXG4gICAgaW5zdGFsbDogW2BucG0gaW5zdGFsbGBdLFxuICAgIHRlc3Q6IFtgbnBtIHJ1biB0ZXN0YF0sXG4gICAgYnVpbGQ6IFtgbnBtIHJ1biBidWlsZGBdLFxuICAgIGFmdGVyQnVpbGQ6IFtdLFxuICAgIHB1Ymxpc2g6IFtgbnBtIHB1Ymxpc2hgXSxcbiAgICB0cnlQdWJsaXNoOiBbYG5wbSBwdWJsaXNoIC0tZHJ5LXJ1bmBdLFxuICB9LFxuXG4gIC8qKlxuICAgKiBPdmVyd3JpdGUgY29tbWFuZHMgcGVyIHBhY2thZ2UuXG4gICAqXG4gICAqIEB0eXBlIHtPYmplY3QuPHN0cmluZz59XG4gICAqL1xuICBwYWNrYWdlQ29tbWFuZHM6IHt9LFxufTtcblxuLyoqXG4gKiBUaGUgY29tbWFuZCB2YWxpZGF0aW9uIHNjaGVtYS5cbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtPYmplY3QuPHN0cmluZz59XG4gKi9cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUNvbW1hbmRzU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIHNldFVwOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICBpbnN0YWxsOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICB0ZXN0OiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICBidWlsZDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgYWZ0ZXJCdWlsZDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgcHVibGlzaDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgdHJ5UHVibGlzaDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbn0pO1xuXG4vKipcbiAqIFRoZSB2YWxpZGF0aW9uIHNjaGVtYVxuICogVXNhZ2U6IHZhbGlkYXRlU2NoZW1hLnZhbGlkYXRlKHt9KTtcbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtPYmplY3QuPHN0cmluZz59XG4gKi9cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVNjaGVtYSA9IEpvaS5vYmplY3Qoe1xuICBwYWNrYWdlczogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgY29tbWFuZHM6IHZhbGlkYXRlQ29tbWFuZHNTY2hlbWEsXG4gIHBhY2thZ2VDb21tYW5kczogSm9pLm9iamVjdCgpLnBhdHRlcm4oL14vLCB2YWxpZGF0ZUNvbW1hbmRzU2NoZW1hKSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB7IGRlZmF1bHRTY2hlbWEsIHZhbGlkYXRlQ29tbWFuZHNTY2hlbWEsIHZhbGlkYXRlU2NoZW1hIH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Schema.js"
      ],
      "names": [
        "defaultSchema",
        "packages",
        "commands",
        "setUp",
        "install",
        "test",
        "build",
        "afterBuild",
        "publish",
        "tryPublish",
        "packageCommands",
        "validateCommandsSchema",
        "Joi",
        "object",
        "array",
        "items",
        "string",
        "validateSchema",
        "pattern"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;AAMO,IAAMA,aAAa,GAAG;AAC3B;;;;;AAKAC,EAAAA,QAAQ,EAAE,KANiB;;AAQ3B;;;;;AAKAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,OAAO,EAAE,eAFD;AAGRC,IAAAA,IAAI,EAAE,gBAHE;AAIRC,IAAAA,KAAK,EAAE,iBAJC;AAKRC,IAAAA,UAAU,EAAE,EALJ;AAMRC,IAAAA,OAAO,EAAE,eAND;AAORC,IAAAA,UAAU,EAAE;AAPJ,GAbiB;;AAuB3B;;;;;AAKAC,EAAAA,eAAe,EAAE;AA5BU,CAAtB;AA+BP;;;;;;;;;AAMO,IAAMC,sBAAsB,GAAGC,gBAAIC,MAAJ,CAAW;AAC/CV,EAAAA,KAAK,EAAES,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CADwC;AAE/CZ,EAAAA,OAAO,EAAEQ,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAFsC;AAG/CX,EAAAA,IAAI,EAAEO,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAHyC;AAI/CV,EAAAA,KAAK,EAAEM,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAJwC;AAK/CT,EAAAA,UAAU,EAAEK,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CALmC;AAM/CR,EAAAA,OAAO,EAAEI,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CANsC;AAO/CP,EAAAA,UAAU,EAAEG,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB;AAPmC,CAAX,CAA/B;AAUP;;;;;;;;;;;AAOO,IAAMC,cAAc,GAAGL,gBAAIC,MAAJ,CAAW;AACvCZ,EAAAA,QAAQ,EAAEW,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAD6B;AAEvCd,EAAAA,QAAQ,EAAES,sBAF6B;AAGvCD,EAAAA,eAAe,EAAEE,gBAAIC,MAAJ,GAAaK,OAAb,CAAqB,GAArB,EAA0BP,sBAA1B;AAHsB,CAAX,CAAvB;;;eAMQ;AAAEX,EAAAA,aAAa,EAAbA,aAAF;AAAiBW,EAAAA,sBAAsB,EAAtBA,sBAAjB;AAAyCM,EAAAA,cAAc,EAAdA;AAAzC,C",
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/",
      "sourcesContent": [
        "import Joi from \"joi\";\n\n/**\n * The default config schema.\n *\n * @const\n * @type {Object.<string>}\n */\nexport const defaultSchema = {\n  /**\n   * Paths to directories which ONLY constains package directories.\n   *\n   * @type {array}\n   */\n  packages: [`/`],\n\n  /**\n   * Default commands to run on each package.\n   *\n   * @type {Object.<string>}\n   */\n  commands: {\n    setUp: [],\n    install: [`npm install`],\n    test: [`npm run test`],\n    build: [`npm run build`],\n    afterBuild: [],\n    publish: [`npm publish`],\n    tryPublish: [`npm publish --dry-run`],\n  },\n\n  /**\n   * Overwrite commands per package.\n   *\n   * @type {Object.<string>}\n   */\n  packageCommands: {},\n};\n\n/**\n * The command validation schema.\n *\n * @const\n * @type {Object.<string>}\n */\nexport const validateCommandsSchema = Joi.object({\n  setUp: Joi.array().items(Joi.string()),\n  install: Joi.array().items(Joi.string()),\n  test: Joi.array().items(Joi.string()),\n  build: Joi.array().items(Joi.string()),\n  afterBuild: Joi.array().items(Joi.string()),\n  publish: Joi.array().items(Joi.string()),\n  tryPublish: Joi.array().items(Joi.string()),\n});\n\n/**\n * The validation schema\n * Usage: validateSchema.validate({});\n *\n * @const\n * @type {Object.<string>}\n */\nexport const validateSchema = Joi.object({\n  packages: Joi.array().items(Joi.string()),\n  commands: validateCommandsSchema,\n  packageCommands: Joi.object().pattern(/^/, validateCommandsSchema),\n});\n\nexport default { defaultSchema, validateCommandsSchema, validateSchema };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595069310360
  },
  "{\"sourceRoot\":\"/home/tom/Code/st/actions-github-packages-monorepo/src/Def/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"filename\":\"/home/tom/Code/st/actions-github-packages-monorepo/src/Def/Schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tom/Code/st/actions-github-packages-monorepo\",\"plugins\":[{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/Def/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tom/Code/st/actions-github-packages-monorepo",
      "filename": "/home/tom/Code/st/actions-github-packages-monorepo/src/Def/Schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tom/Code/st/actions-github-packages-monorepo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tom/Code/st/actions-github-packages-monorepo/src/Def/Schema.js",
        "plugins": [
          "objectRestSpread",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tom/Code/st/actions-github-packages-monorepo/src/Def/Schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/Def/",
        "sourceFileName": "Schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * The default config schema.\n *\n * @const\n * @type {Object.<string>}\n */\nvar defaultSchema = {\n  /**\n   * Paths to directories which ONLY constains package directories.\n   *\n   * @type {array}\n   */\n  packages: [\"/\"],\n\n  /**\n   * Default commands to run on each package.\n   *\n   * @type {Object.<string>}\n   */\n  commands: {\n    setUp: [],\n    install: [\"npm install\"],\n    test: [\"npm run test\"],\n    build: [\"npm run build\"],\n    afterBuild: [],\n    publish: [\"npm publish\"],\n    tryPublish: [\"npm publish --dry-run\"]\n  },\n\n  /**\n   * Overwrite commands per package.\n   *\n   * @type {Object.<string>}\n   */\n  packageCommands: {}\n};\n/**\n * The command validation schema.\n *\n * @const\n * @type {Object.<string>}\n */\n\nvar validateCommandsSchema = _joi[\"default\"].object({\n  setUp: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  install: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  test: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  build: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  afterBuild: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  publish: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  tryPublish: _joi[\"default\"].array().items(_joi[\"default\"].string())\n});\n/**\n * The validation schema\n * Usage: validateSchema.validate({});\n *\n * @const\n * @type {Object.<string>}\n */\n\n\nvar validateSchema = _joi[\"default\"].object({\n  packages: _joi[\"default\"].array().items(_joi[\"default\"].string()),\n  commands: validateCommandsSchema,\n  packageCommands: _joi[\"default\"].object().pattern(/^/, validateCommandsSchema)\n});\n\nvar _default = {\n  defaultSchema: defaultSchema,\n  validateCommandsSchema: validateCommandsSchema,\n  validateSchema: validateSchema\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjaGVtYS5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0U2NoZW1hIiwicGFja2FnZXMiLCJjb21tYW5kcyIsInNldFVwIiwiaW5zdGFsbCIsInRlc3QiLCJidWlsZCIsImFmdGVyQnVpbGQiLCJwdWJsaXNoIiwidHJ5UHVibGlzaCIsInBhY2thZ2VDb21tYW5kcyIsInZhbGlkYXRlQ29tbWFuZHNTY2hlbWEiLCJKb2kiLCJvYmplY3QiLCJhcnJheSIsIml0ZW1zIiwic3RyaW5nIiwidmFsaWRhdGVTY2hlbWEiLCJwYXR0ZXJuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQTs7Ozs7O0FBTUEsSUFBTUEsYUFBYSxHQUFHO0FBQ3BCOzs7OztBQUtBQyxFQUFBQSxRQUFRLEVBQUUsS0FOVTs7QUFRcEI7Ozs7O0FBS0FDLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxLQUFLLEVBQUUsRUFEQztBQUVSQyxJQUFBQSxPQUFPLEVBQUUsZUFGRDtBQUdSQyxJQUFBQSxJQUFJLEVBQUUsZ0JBSEU7QUFJUkMsSUFBQUEsS0FBSyxFQUFFLGlCQUpDO0FBS1JDLElBQUFBLFVBQVUsRUFBRSxFQUxKO0FBTVJDLElBQUFBLE9BQU8sRUFBRSxlQU5EO0FBT1JDLElBQUFBLFVBQVUsRUFBRTtBQVBKLEdBYlU7O0FBdUJwQjs7Ozs7QUFLQUMsRUFBQUEsZUFBZSxFQUFFO0FBNUJHLENBQXRCO0FBK0JBOzs7Ozs7O0FBTUEsSUFBTUMsc0JBQXNCLEdBQUdDLGdCQUFJQyxNQUFKLENBQVc7QUFDeENWLEVBQUFBLEtBQUssRUFBRVMsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FEaUM7QUFFeENaLEVBQUFBLE9BQU8sRUFBRVEsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FGK0I7QUFHeENYLEVBQUFBLElBQUksRUFBRU8sZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FIa0M7QUFJeENWLEVBQUFBLEtBQUssRUFBRU0sZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FKaUM7QUFLeENULEVBQUFBLFVBQVUsRUFBRUssZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FMNEI7QUFNeENSLEVBQUFBLE9BQU8sRUFBRUksZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FOK0I7QUFPeENQLEVBQUFBLFVBQVUsRUFBRUcsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEI7QUFQNEIsQ0FBWCxDQUEvQjtBQVVBOzs7Ozs7Ozs7QUFPQSxJQUFNQyxjQUFjLEdBQUdMLGdCQUFJQyxNQUFKLENBQVc7QUFDaENaLEVBQUFBLFFBQVEsRUFBRVcsZ0JBQUlFLEtBQUosR0FBWUMsS0FBWixDQUFrQkgsZ0JBQUlJLE1BQUosRUFBbEIsQ0FEc0I7QUFFaENkLEVBQUFBLFFBQVEsRUFBRVMsc0JBRnNCO0FBR2hDRCxFQUFBQSxlQUFlLEVBQUVFLGdCQUFJQyxNQUFKLEdBQWFLLE9BQWIsQ0FBcUIsR0FBckIsRUFBMEJQLHNCQUExQjtBQUhlLENBQVgsQ0FBdkI7O2VBTWU7QUFBRVgsRUFBQUEsYUFBYSxFQUFiQSxhQUFGO0FBQWlCVyxFQUFBQSxzQkFBc0IsRUFBdEJBLHNCQUFqQjtBQUF5Q00sRUFBQUEsY0FBYyxFQUFkQTtBQUF6QyxDIiwic291cmNlUm9vdCI6Ii9ob21lL3RvbS9Db2RlL3N0L2FjdGlvbnMtZ2l0aHViLXBhY2thZ2VzLW1vbm9yZXBvL3NyYy9EZWYvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEpvaSBmcm9tIFwiam9pXCI7XG5cbi8qKlxuICogVGhlIGRlZmF1bHQgY29uZmlnIHNjaGVtYS5cbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtPYmplY3QuPHN0cmluZz59XG4gKi9cbmNvbnN0IGRlZmF1bHRTY2hlbWEgPSB7XG4gIC8qKlxuICAgKiBQYXRocyB0byBkaXJlY3RvcmllcyB3aGljaCBPTkxZIGNvbnN0YWlucyBwYWNrYWdlIGRpcmVjdG9yaWVzLlxuICAgKlxuICAgKiBAdHlwZSB7YXJyYXl9XG4gICAqL1xuICBwYWNrYWdlczogW2AvYF0sXG5cbiAgLyoqXG4gICAqIERlZmF1bHQgY29tbWFuZHMgdG8gcnVuIG9uIGVhY2ggcGFja2FnZS5cbiAgICpcbiAgICogQHR5cGUge09iamVjdC48c3RyaW5nPn1cbiAgICovXG4gIGNvbW1hbmRzOiB7XG4gICAgc2V0VXA6IFtdLFxuICAgIGluc3RhbGw6IFtgbnBtIGluc3RhbGxgXSxcbiAgICB0ZXN0OiBbYG5wbSBydW4gdGVzdGBdLFxuICAgIGJ1aWxkOiBbYG5wbSBydW4gYnVpbGRgXSxcbiAgICBhZnRlckJ1aWxkOiBbXSxcbiAgICBwdWJsaXNoOiBbYG5wbSBwdWJsaXNoYF0sXG4gICAgdHJ5UHVibGlzaDogW2BucG0gcHVibGlzaCAtLWRyeS1ydW5gXSxcbiAgfSxcblxuICAvKipcbiAgICogT3ZlcndyaXRlIGNvbW1hbmRzIHBlciBwYWNrYWdlLlxuICAgKlxuICAgKiBAdHlwZSB7T2JqZWN0LjxzdHJpbmc+fVxuICAgKi9cbiAgcGFja2FnZUNvbW1hbmRzOiB7fSxcbn07XG5cbi8qKlxuICogVGhlIGNvbW1hbmQgdmFsaWRhdGlvbiBzY2hlbWEuXG4gKlxuICogQGNvbnN0XG4gKiBAdHlwZSB7T2JqZWN0LjxzdHJpbmc+fVxuICovXG5jb25zdCB2YWxpZGF0ZUNvbW1hbmRzU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIHNldFVwOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICBpbnN0YWxsOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICB0ZXN0OiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICBidWlsZDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgYWZ0ZXJCdWlsZDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgcHVibGlzaDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbiAgdHJ5UHVibGlzaDogSm9pLmFycmF5KCkuaXRlbXMoSm9pLnN0cmluZygpKSxcbn0pO1xuXG4vKipcbiAqIFRoZSB2YWxpZGF0aW9uIHNjaGVtYVxuICogVXNhZ2U6IHZhbGlkYXRlU2NoZW1hLnZhbGlkYXRlKHt9KTtcbiAqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHtPYmplY3QuPHN0cmluZz59XG4gKi9cbmNvbnN0IHZhbGlkYXRlU2NoZW1hID0gSm9pLm9iamVjdCh7XG4gIHBhY2thZ2VzOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpLFxuICBjb21tYW5kczogdmFsaWRhdGVDb21tYW5kc1NjaGVtYSxcbiAgcGFja2FnZUNvbW1hbmRzOiBKb2kub2JqZWN0KCkucGF0dGVybigvXi8sIHZhbGlkYXRlQ29tbWFuZHNTY2hlbWEpLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHsgZGVmYXVsdFNjaGVtYSwgdmFsaWRhdGVDb21tYW5kc1NjaGVtYSwgdmFsaWRhdGVTY2hlbWEgfTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Schema.js"
      ],
      "names": [
        "defaultSchema",
        "packages",
        "commands",
        "setUp",
        "install",
        "test",
        "build",
        "afterBuild",
        "publish",
        "tryPublish",
        "packageCommands",
        "validateCommandsSchema",
        "Joi",
        "object",
        "array",
        "items",
        "string",
        "validateSchema",
        "pattern"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;AAMA,IAAMA,aAAa,GAAG;AACpB;;;;;AAKAC,EAAAA,QAAQ,EAAE,KANU;;AAQpB;;;;;AAKAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,OAAO,EAAE,eAFD;AAGRC,IAAAA,IAAI,EAAE,gBAHE;AAIRC,IAAAA,KAAK,EAAE,iBAJC;AAKRC,IAAAA,UAAU,EAAE,EALJ;AAMRC,IAAAA,OAAO,EAAE,eAND;AAORC,IAAAA,UAAU,EAAE;AAPJ,GAbU;;AAuBpB;;;;;AAKAC,EAAAA,eAAe,EAAE;AA5BG,CAAtB;AA+BA;;;;;;;AAMA,IAAMC,sBAAsB,GAAGC,gBAAIC,MAAJ,CAAW;AACxCV,EAAAA,KAAK,EAAES,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CADiC;AAExCZ,EAAAA,OAAO,EAAEQ,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAF+B;AAGxCX,EAAAA,IAAI,EAAEO,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAHkC;AAIxCV,EAAAA,KAAK,EAAEM,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAJiC;AAKxCT,EAAAA,UAAU,EAAEK,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAL4B;AAMxCR,EAAAA,OAAO,EAAEI,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CAN+B;AAOxCP,EAAAA,UAAU,EAAEG,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB;AAP4B,CAAX,CAA/B;AAUA;;;;;;;;;AAOA,IAAMC,cAAc,GAAGL,gBAAIC,MAAJ,CAAW;AAChCZ,EAAAA,QAAQ,EAAEW,gBAAIE,KAAJ,GAAYC,KAAZ,CAAkBH,gBAAII,MAAJ,EAAlB,CADsB;AAEhCd,EAAAA,QAAQ,EAAES,sBAFsB;AAGhCD,EAAAA,eAAe,EAAEE,gBAAIC,MAAJ,GAAaK,OAAb,CAAqB,GAArB,EAA0BP,sBAA1B;AAHe,CAAX,CAAvB;;eAMe;AAAEX,EAAAA,aAAa,EAAbA,aAAF;AAAiBW,EAAAA,sBAAsB,EAAtBA,sBAAjB;AAAyCM,EAAAA,cAAc,EAAdA;AAAzC,C",
      "sourceRoot": "/home/tom/Code/st/actions-github-packages-monorepo/src/Def/",
      "sourcesContent": [
        "import Joi from \"joi\";\n\n/**\n * The default config schema.\n *\n * @const\n * @type {Object.<string>}\n */\nconst defaultSchema = {\n  /**\n   * Paths to directories which ONLY constains package directories.\n   *\n   * @type {array}\n   */\n  packages: [`/`],\n\n  /**\n   * Default commands to run on each package.\n   *\n   * @type {Object.<string>}\n   */\n  commands: {\n    setUp: [],\n    install: [`npm install`],\n    test: [`npm run test`],\n    build: [`npm run build`],\n    afterBuild: [],\n    publish: [`npm publish`],\n    tryPublish: [`npm publish --dry-run`],\n  },\n\n  /**\n   * Overwrite commands per package.\n   *\n   * @type {Object.<string>}\n   */\n  packageCommands: {},\n};\n\n/**\n * The command validation schema.\n *\n * @const\n * @type {Object.<string>}\n */\nconst validateCommandsSchema = Joi.object({\n  setUp: Joi.array().items(Joi.string()),\n  install: Joi.array().items(Joi.string()),\n  test: Joi.array().items(Joi.string()),\n  build: Joi.array().items(Joi.string()),\n  afterBuild: Joi.array().items(Joi.string()),\n  publish: Joi.array().items(Joi.string()),\n  tryPublish: Joi.array().items(Joi.string()),\n});\n\n/**\n * The validation schema\n * Usage: validateSchema.validate({});\n *\n * @const\n * @type {Object.<string>}\n */\nconst validateSchema = Joi.object({\n  packages: Joi.array().items(Joi.string()),\n  commands: validateCommandsSchema,\n  packageCommands: Joi.object().pattern(/^/, validateCommandsSchema),\n});\n\nexport default { defaultSchema, validateCommandsSchema, validateSchema };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595069002160
  }
}